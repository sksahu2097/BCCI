{"version":3,"sources":["components/TableRow.jsx","components/TableHead.jsx","components/Apps.jsx","components/AllMatch.jsx","components/Option.jsx","components/getMatchesBySeries.jsx","components/CreateSeries.jsx","components/CreateMatchBySeries.jsx","components/EditTableRow.jsx","components/UpdateSeries.jsx","components/MatchTableHead.jsx","components/EditMatchTableRow.jsx","components/EditMatchRow.jsx","components/MatchHead.jsx","components/UpdateMatch.jsx","components/history.js","components/MasterPannel.jsx","components/MatchMasterPanel.jsx","components/SeriesMasterPanel.jsx","components/PredictionTableHead.jsx","components/PredictionTableRow.jsx","components/Prediction.jsx","Routes/Routes.js","index.js"],"names":["TableRow","props","firstcolumn","secondcolumn","thirdcolumn","fourthcolumn","TableHead","App","fetchData","a","axios","get","response","setState","series","data","state","className","onClick","this","map","singleseries","key","series_id","series_name","start_date","end_date","React","Component","AllMatch","console","warn","match","singlematch","match_id","team1","team2","city","date","Option","value","name","GetMatchesBySeriesId","seriesId","then","length","resposelength","catch","error","log","status","header","window","alert","handleChange","event","target","bind","fetch","resp","json","result","onChange","CreateSeries","saveData","post","matches","handleInputChange","type","id","placeholder","min","max","CreateMatchBySeries","EditTableRow","secondcolumnValue","thirdcolumnValue","fourthcolumnValue","UpdateSeries","updateSeries","saveUpdatedSeries","put","deleteSeries","delete","MatchTableHead","fifthcolumn","EditMatchTableRow","handleCheckChange","fifthcolumnValue","EditMatchRow","MatchHead","UpdateMatch","getData","matchId","newMatch","saveUpdatedMatch","deleteMatch","e","item","history","MasterPanel","push","MatchMasterPanel","SeriesMasterPanel","PredictionTableHead","sixthcolumn","seventhcolumn","eigthcolumn","PredictionTableRow","Prediction","finalvalue","prediction","Object","keys","predictionData","forEach","ke","getWeatherCat","singlePredication","weatherCat","getValue","per","fetchImageUrl","weatherPerc","perc","iconId","match_date","src","alt","Routes","path","exact","component","MasterPannel","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dfbccf0b.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction TableRow(props){\n    return(\n        <tr>\n            <td>{props.firstcolumn}</td>\n            <td>{props.secondcolumn}</td>\n            <td>{props.thirdcolumn}</td>\n            <td>{props.fourthcolumn}</td>\n        </tr>\n    );\n}\n\nexport default TableRow;","import React from \"react\";\n\nfunction TableHead(props){\n    return (\n        <thead>\n        <tr>\n          <th>{props.firstcolumn}</th>\n          <th>{props.secondcolumn}</th>\n          <th>{props.thirdcolumn}</th>\n          <th>{props.fourthcolumn}</th>\n        </tr>\n        </thead>\n    );\n}\n\nexport default TableHead;","import React from \"react\";\nimport TableRow from \"./TableRow\"\nimport axios from 'axios';\nimport TableHead from \"./TableHead\";\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state = {\n      series : []\n    }\n  }\n  /*componentDidMount(){  \n    fetch('http://localhost:8080/winsoft/BCCI/series').then((resp)=>{\n      resp.json().then((result)=>{\n        console.warn(result);\n        this.setState({series:result});\n      })\n    })\n  }*/\nfetchData = async () => {\n    const response = await axios.get('http://localhost:8080/winsoft/BCCI/series');\n    this.setState({series:response.data});\n  }\n    render() {\n      return(\n        <div className=\"container\">\n        <button onClick={this.fetchData} className=\"btn\">get Data</button>\n        <div>\n        <table>\n        <TableHead\n          firstcolumn = \"Series Id\"\n          secondcolumn = \"Series Name\"\n          thirdcolumn = \"Start Date\"\n          fourthcolumn = \"End Date\"\n\n        />\n        <tbody>\n        {\n          this.state.series.map(singleseries =>\n            <TableRow key={singleseries.series_id} \n            firstcolumn = {singleseries.series_id} \n            secondcolumn = {singleseries.series_name} \n            thirdcolumn = {singleseries.start_date} \n            fourthcolumn = {singleseries.end_date}\n\n            />)\n        }\n        </tbody>\n        </table>\n        </div>\n        </div>\n      );\n      }\n}\n\nexport default App;","import React from \"react\";\nimport TableRow from \"./TableRow\"\nimport axios from 'axios';\nimport TableHead from \"./TableHead\";\nclass AllMatch extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n          match : []\n        }\n    }\n\n    fetchData = async () => {\n        const response = await axios.get('http://localhost:8080/winsoft/BCCI/match');\n        console.warn(response.data);\n        this.setState({match:response.data});\n      }\n\n      render() {\n        return(\n          <div className=\"container\">\n          <button onClick={this.fetchData}>get Data</button>\n          <div>\n          <table>\n          <TableHead\n            firstcolumn = \"team1\"\n            secondcolumn = \"team2\"\n            thirdcolumn = \"city\"\n            fourthcolumn = \"match_date\"\n  \n          />\n          <tbody>\n          {\n            this.state.match.map(singlematch =>\n            <TableRow key={singlematch.match_id} \n            firstcolumn = {singlematch.team1} \n            secondcolumn = {singlematch.team2} \n            thirdcolumn = {singlematch.city} \n            fourthcolumn = {singlematch.date}\n\n            />)\n        }\n          </tbody>\n          </table>\n          </div>\n          </div>\n        );\n        }\n}\n\nexport default AllMatch;","import React from \"react\";\n\nfunction Option(props){\n    return(\n        <option value = {props.value}>{props.name}</option>\n    );\n}\n\nexport default Option;","import React from \"react\";\nimport axios from 'axios';\nimport Option from \"./Option\";\nimport TableRow from \"./TableRow\"\nimport TableHead from \"./TableHead\";\n\nclass GetMatchesBySeriesId extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            match : [],\n            series : [],\n            value : '',\n            resposelength : '0'\n        }\n        this.handleChange = this.handleChange.bind(this);\n    }\n    componentDidMount(){  \n        fetch('http://localhost:8080/winsoft/BCCI/series').then((resp)=>{\n          resp.json().then((result)=>{\n            console.warn(result);\n            this.setState({series:result});\n          })\n        })\n    }\n    fetchData = async (seriesId) => {\n                              await axios.get(`http://localhost:8080/winsoft/BCCI/matches/series/${seriesId}`)\n                                      .then(response => {\n                                        console.warn(response.data);\n                                        console.warn(response.data.length);\n                                        this.setState({match:response.data, resposelength:response.data.length});\n                                      })\n                                      .catch(function (error){\n                                        if (error.response) {\n                                          console.log(error.response.status);\n                                          console.log(error.response.header);\n                                          window.alert(\"No matches found in this series = \"+error.response.status);\n                                        }\n                                      });\n        \n      }\n\n      handleChange = async (event) =>{\n        await this.setState({value: event.target.value});\n        console.log(\"selected Series  = \"+this.state.value);\n        this.fetchData(this.state.value);\n      }\n\n\n\n    render(){\n        return(\n            <div className=\"container\">\n                <select value = {this.state.value} onChange = {this.handleChange}>\n                    {\n                        this.state.series.map(singleseries =>\n                            <Option\n                                key = {singleseries.series_id}\n                                value = {singleseries.series_id}\n                                name = {singleseries.series_name}\n                            />\n                        )\n                    }\n                </select>\n\n                <div>\n          <table>\n          <TableHead\n            firstcolumn = \"Team 1\"\n            secondcolumn = \"Team 2\"\n            thirdcolumn = \"City Name\"\n            fourthcolumn = \"Match Date\"\n  \n          />\n          <tbody>\n          {\n            this.state.match.map(singlematch =>\n            <TableRow key={singlematch.match_id} \n            firstcolumn = {singlematch.team1} \n            secondcolumn = {singlematch.team2} \n            thirdcolumn = {singlematch.city} \n            fourthcolumn = {singlematch.date}\n\n            />)\n        }\n          </tbody>\n          </table>\n          </div>\n            </div>\n        );\n    }\n}\n\nexport default GetMatchesBySeriesId;","import React from \"react\";\nimport axios from 'axios';\nclass CreateSeries extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n            series_name : '',\n            start_date : '',\n            end_date : ''\n        };\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    handleInputChange(event){\n        const value = event.target.value;\n        const name = event.target.name;\n        this.setState({\n            [name] : value\n        });\n\n        console.warn(name + \" \"+value);\n    }\n\n    saveData = async () =>{\n         await axios.post('http://localhost:8080/winsoft/BCCI/series',{\n            series_name : this.state.series_name,\n            start_date : this.state.start_date,\n            end_date : this.state.end_date,\n            matches : []\n        },{\"headers\": {\n\n            \"content-type\": \"application/json\",\n\n          },})\n        .then(response => {\n            console.warn(response.data);\n            console.warn(response.data.length);\n            window.alert(response.data);\n            //transfer code to be written here\n          })\n          .catch(function (error){\n            if (error.response) {\n              console.log(error.response.status);\n              console.log(error.response.header);\n              window.alert(\"some error occurred = \"+error.response.status);\n            }\n          });\n    }\n\n    render(){\n        return(\n            <div className = \"bg-wrap-series\">\n            <div className=\"wrap-series\">\n                <form className=\"createseries\">\n                    <span className=\"contact2-form-title\">\n\t\t\t\t\t\tCreate Series\n\t\t\t\t\t</span>\n                    <input type=\"text\" className = \"createseriesinput\" id=\"series_name\" \n                    placeholder = \"series name\" onChange = {this.handleInputChange}\n                    name = \"series_name\" value = {this.state.series_name}\n                    />\n                    <input type = \"date\" min=\"2020-01-01\" max=\"2020-12-31\" \n                    className = \"createseriesinput\" name = \"start_date\"\n                    id = \"start_date\" placeholder = \"start date\"\n                    value = {this.state.start_date} onChange = {this.handleInputChange}\n                    />\n                    <input type = \"date\"  className = \"createseriesinput\" min=\"2020-01-01\" \n                    max=\"2020-12-31\" id = \"end_date\" placeholder = \"end_date\" \n                    name = \"end_date\" value = {this.state.end_date} onChange = {this.handleInputChange}\n                    /> \n                    <button className=\"btn\" onClick = {this.saveData}>\n\t\t\t\t\t\t\t\tSave Data\n\t\t\t\t\t</button>\n                </form>\n            </div>\n            </div>\n        );\n    };\n}\n\nexport default CreateSeries;","import React from \"react\";\nimport axios from \"axios\";\nimport Option from \"./Option\";\n\nclass CreateMatchBySeries extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            team1 : '',\n            team2 : '',\n            city : '',\n            date : '',\n            series_id : '',\n            series : []\n        };\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    handleInputChange(event){\n        const value = event.target.value;\n        const name = event.target.name;\n        this.setState({\n            [name] : value\n        });\n\n        console.warn(name + \" \"+value);\n    }\n\n    handleChange = async(event) =>{\n        await this.setState({series_id: event.target.value});\n        console.log(this.state.series_id);\n    }\n\n    //to load all the series\n    componentDidMount(){  \n        fetch('http://localhost:8080/winsoft/BCCI/series').then((resp)=>{\n          resp.json().then((result)=>{\n            console.warn(result);\n            this.setState({series:result});\n          })\n        })\n    }\n    \n    saveData = async () =>{\n        window.alert(\"clicked\");\n        await axios.post(`http://localhost:8080/winsoft/BCCI/match/${this.state.series_id}`,{\n           team1 : this.state.team1,\n           team2 : this.state.team2,\n           city : this.state.city,\n           date : this.state.date\n       },{\"headers\": {\n\n           \"content-type\": \"application/json\",\n\n\n         },})\n       .then(response => {\n           console.warn(response.data);\n           console.warn(response.data.length);\n           window.alert(response.data);\n           //transfer code to be written here\n         })\n         .catch(function (error){\n           if (error.response) {\n             console.log(error.response.status);\n             console.log(error.response.header);\n             window.alert(\"some error occurred = \"+error.response.status);\n           }\n         });\n         window.alert(\"some error occurred = \");\n   }\n\n    render(){\n        return(\n            <div className = \"bg-wrap-series\">\n            <div className=\"wrap-series\">\n                <form className=\"createseries\">\n                    <span className=\"contact2-form-title\">\n\t\t\t\t\t\tCreate Match By Series Id\n\t\t\t\t\t</span>\n                    <input type=\"text\" className = \"createseriesinput\" id=\"team1\" \n                    placeholder = \"Team 1 Name\" onChange = {this.handleInputChange}\n                    name = \"team1\" value = {this.state.team1}\n                    />\n                    <input type=\"text\" className = \"createseriesinput\" id=\"team2\" \n                    placeholder = \"Team 2 Name\" onChange = {this.handleInputChange}\n                    name = \"team2\" value = {this.state.team2}\n                    />\n                    <input type=\"text\" className = \"createseriesinput\" id=\"city\" \n                    placeholder = \"City Name\" onChange = {this.handleInputChange}\n                    name = \"city\" value = {this.state.city}\n                    />\n                    <input type = \"date\"  className = \"createseriesinput\" min=\"2020-01-01\" \n                    max=\"2020-12-31\" id = \"date\"\n                    name = \"date\" value = {this.state.date} onChange = {this.handleInputChange}\n                    />\n                    <div>\n                    <label  className = \"selectser\">Select Series</label>\n                    <select value = {this.state.value} onChange = {this.handleChange}\n                    className=\"selectOption\">\n                    {\n                        this.state.series.map(singleseries =>\n                            <Option\n                                key = {singleseries.series_id}\n                                value = {singleseries.series_id}\n                                name = {singleseries.series_name}\n                            />\n                        )\n                    }\n                </select>\n                <br/><br/>\n                <button className=\"btn\" onClick = {this.saveData}>\n\t\t\t\t\t\t\tSave Data\n\t\t\t\t\t</button>\n                </div>\n                    \n                </form>\n            </div>\n            </div>   \n        );\n    };\n}\n\nexport default CreateMatchBySeries;","import React from \"react\";\n\nclass EditTableRow extends React.Component{\n    render(){\n    return(\n        <tr>\n            <td><input value = {this.props.firstcolumn} onChange={this.props.handleInputChange} \n            name=\"series_id\"/></td>\n            <td><input value ={this.props.secondcolumnValue} onChange={this.props.handleInputChange} \n            name=\"series_name\"/></td>\n            <td><input value ={this.props.thirdcolumnValue} type = \"date\" \n            onChange={this.props.handleInputChange}\n             name=\"start_date\"/></td>\n            <td><input value ={this.props.fourthcolumnValue} type = \"date\"\n             onChange={this.props.handleInputChange} \n            name=\"end_date\"/></td>\n        </tr>\n    )\n    };\n}\n\nexport default EditTableRow;","import React from \"react\";\nimport Option from \"./Option\";\nimport EditTableRow from \"./EditTableRow\"\nimport axios from 'axios';\nimport TableHead from \"./TableHead\";\n\nclass UpdateSeries extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            series_id : '',\n            series : [],\n            \n            series_name : '',\n            start_date : '',\n            end_date : '',\n            updateSeries : []\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    componentDidMount(){  \n        fetch('http://localhost:8080/winsoft/BCCI/series').then((resp)=>{\n          resp.json().then((result)=>{\n            console.warn(result);\n            this.setState({series:result});\n          })\n        })\n    }\n\n    fetchData = async (seriesId) => {\n        await axios.get(`http://localhost:8080/winsoft/BCCI/series/${seriesId}`)\n                .then(response => {\n                  console.warn(response.data);\n                  console.warn(response.data.length);\n                  this.setState({updateSeries:response.data});\n                  this.setState({\n                    series_name : response.data[0].series_name,\n                    start_date : response.data[0].start_date,\n                    end_date : response.data[0].end_date\n                });\n                console.log(\"series_name : \"+response.data[0].series_name);\n                })\n                .catch(function (error){\n                  if (error.response) {\n                    console.log(error.response.status);\n                    console.log(error.response.header);\n                  }\n                });\n\n    } \n\n    saveUpdatedSeries = async () =>{\n        await axios.put('http://localhost:8080/winsoft/BCCI/series/'+this.state.series_id,{\n           series_name : this.state.series_name,\n           start_date : this.state.start_date,\n           end_date : this.state.end_date,\n           series_id : this.state.series_id\n       },{\"headers\": {\n\n           \"content-type\": \"application/json\",\n\n         },})\n       .then(response => {\n           console.warn(response.data);\n           console.warn(response.data.length);\n           window.alert(response.data);\n           //transfer code to be written here\n         })\n         .catch(function (error){\n           if (error.response) {\n             console.log(error.response.status);\n             console.log(error.response.header);\n             window.alert(\"some error occurred = \"+error.response.status);\n           }\n         });\n   }\n\n   deleteSeries = async () =>{\n    await axios.delete('http://localhost:8080/winsoft/BCCI/series/'+this.state.series_id,{\n       \n   },{\"headers\": {\n\n       \"content-type\": \"application/json\",\n\n     },})\n   .then(response => {\n       console.warn(response.data);\n       console.warn(response.data.length);\n       window.alert(response.data);\n       //transfer code to be written here\n     })\n     .catch(function (error){\n       if (error.response) {\n         console.log(error.response.status);\n         console.log(error.response.header);\n         window.alert(\"some error occurred = \"+error.response.status);\n       }\n     });\n}\n\n    handleChange = async(event) =>{\n        await this.setState({series_id: event.target.value});\n        console.log(this.state.series_id);\n        this.fetchData(this.state.series_id);\n    }\n\n    handleInputChange(event){\n        const value = event.target.value;\n        const name = event.target.name;\n        console.warn(name + \" \"+value);\n        this.setState({\n            [name] : value\n        });\n\n        console.warn(name + \" \"+value);\n    }\n\n    render(){\n        return(\n            <div className = \"container\">\n                <center><h1>Update Series</h1></center>\n                <br/>\n                <label  className = \"selectser\">Select Series</label>\n                    <select value = {this.state.value} onChange = {this.handleChange}\n                    className=\"selectOption\">\n                    {\n                        this.state.series.map(singleseries =>\n                            <Option\n                                key = {singleseries.series_id}\n                                value = {singleseries.series_id}\n                                name = {singleseries.series_name}\n                            />\n                        )\n                    }\n                </select>\n                <table>\n        <TableHead\n          firstcolumn = \"Series Id\"\n          secondcolumn = \"Series Name\"\n          thirdcolumn = \"Start Date\"\n          fourthcolumn = \"End Date\"\n          onChange = {this}\n        />\n        <tbody>\n        {\n          this.state.updateSeries.map(singleseries =>\n\n            <EditTableRow key={singleseries.series_id}\n            handleInputChange = {this.handleInputChange}\n            firstcolumn = {singleseries.series_id} \n            secondcolumnValue = {this.state.series_name}\n            thirdcolumnValue = {this.state.start_date}\n            fourthcolumnValue = {this.state.end_date} \n            \n            />)\n        }\n        </tbody>\n        </table>\n            <br/><br/>\n            <button className = \"btn\" onClick = {this.saveUpdatedSeries}>Upate Series</button>\n            <button  className = \"delbtn\" onClick = {this.deleteSeries}>Delete Series</button>\n            </div>\n        );\n    };\n}\n\nexport default UpdateSeries;","import React from \"react\";\n\nfunction MatchTableHead(props){\n    return (\n        <thead>\n        <tr>\n          <th>select Status</th>\n          <th>{props.firstcolumn}</th>\n          <th>{props.secondcolumn}</th>\n          <th>{props.thirdcolumn}</th>\n          <th>{props.fourthcolumn}</th>\n          <th>{props.fifthcolumn}</th>\n        </tr>\n        </thead>\n    );\n}\n\nexport default MatchTableHead;","import React from \"react\";\n\nclass EditMatchTableRow extends React.Component{\n    render(){\n    return(\n        <tr>\n            <td><label><input type=\"checkbox\" name = {this.props.firstcolumn} \n            onChange={this.props.handleCheckChange}/></label></td>\n            <td><input value = {this.props.firstcolumn} onChange={this.props.handleInputChange} \n            name=\"match_id\"/></td>\n            <td><input value ={this.props.secondcolumnValue} onChange={this.props.handleInputChange} \n            name=\"team1\"/></td>\n            <td><input value ={this.props.thirdcolumnValue} onChange={this.props.handleInputChange}\n             name=\"team2\"/></td>\n             <td><input value ={this.props.fourthcolumnValue} onChange={this.props.handleInputChange}\n             name=\"city\"/></td>\n            <td><input value ={this.props.fifthcolumnValue} type = \"date\" \n            onChange={this.props.handleInputChange} \n            name=\"date\"/></td>\n        </tr>\n    )\n    };\n}\n\nexport default EditMatchTableRow;","import React from \"react\";\n\nclass EditMatchRow extends React.Component{\n    render(){\n    return(\n        <tr>\n            <td><input value = {this.props.firstcolumn} onChange={this.props.handleInputChange} \n            name=\"match_id\"/></td>\n            <td><input value ={this.props.secondcolumnValue} onChange={this.props.handleInputChange} \n            name=\"team1\"/></td>\n            <td><input value ={this.props.thirdcolumnValue} onChange={this.props.handleInputChange}\n             name=\"team2\"/></td>\n             <td><input value ={this.props.fourthcolumnValue} onChange={this.props.handleInputChange}\n             name=\"city\"/></td>\n            <td><input value ={this.props.fifthcolumnValue} type = \"date\" \n            onChange={this.props.handleInputChange} \n            name=\"date\"/></td>\n        </tr>\n    )\n    };\n}\n\nexport default EditMatchRow;","import React from \"react\";\n\nfunction MatchHead(props){\n    return (\n        <thead>\n        <tr>\n          <th>{props.firstcolumn}</th>\n          <th>{props.secondcolumn}</th>\n          <th>{props.thirdcolumn}</th>\n          <th>{props.fourthcolumn}</th>\n          <th>{props.fifthcolumn}</th>\n        </tr>\n        </thead>\n    );\n}\n\nexport default MatchHead;","import React from \"react\";\nimport Option from \"./Option\"\nimport axios from \"axios\";\nimport MatchTableHead from \"./MatchTableHead\";\nimport EditMatchTableRow from \"./EditMatchTableRow\"\nimport EditMatchRow from \"./EditMatchRow\";\nimport MatchHead from \"./MatchHead\";\n\nclass UpdateMatch extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            series_id : '',\n            series : [],\n            match : [],\n            match_id : '',\n            team1 : '',\n            team2 : '',\n            city : '',\n            date : '',\n            newMatch : []\n       }\n       this.handleCheckChange = this.handleCheckChange.bind(this);\n       this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    componentDidMount(){  \n        fetch('http://localhost:8080/winsoft/BCCI/series').then((resp)=>{\n          resp.json().then((result)=>{\n            console.warn(result);\n            this.setState({series:result});\n          })\n        })\n    }\n\n    fetchData = async (seriesId) => {\n        await axios.get(`http://localhost:8080/winsoft/BCCI/matches/series/${seriesId}`)\n                .then(response => {\n                  console.warn(response.data);\n                  console.warn(response.data.length);\n                  this.setState({match:response.data});\n                })\n                .catch(function (error){\n                  if (error.response) {\n                    console.log(error.response.status);\n                    console.log(error.response.header);\n                    window.alert(\"No matches found in this series = \"+error.response.status);\n                  }\n                });\n\n    }\n\n    getData = async (matchId) => {\n        await axios.get(`http://localhost:8080/winsoft/BCCI/match/${matchId}`)\n                .then(response => {\n                  console.warn(response.data);\n                  console.warn(response.data.length);\n                  this.setState({newMatch:response.data});\n                  console.log(response.data.team1);\n                  this.setState({\n                    match_id : response.data[0].match_id,\n                    team1 : response.data[0].team1,\n                    team2 : response.data[0].team2,\n                    city : response.data[0].city,\n                    date : response.data[0].date\n                });\n                })\n                .catch(function (error){\n                  if (error.response) {\n                    console.log(error.response.status);\n                    console.log(error.response.header);\n                    window.alert(\"No matches found in this series = \"+error.response.status);\n                  }\n                });\n\n    }\n\n    saveUpdatedMatch = async () =>{\n        await axios.put('http://localhost:8080/winsoft/BCCI/match/'+this.state.match_id,{\n           team1 : this.state.team1,\n           team2 : this.state.team2,\n           city : this.state.city,\n           date : this.state.date,\n           match_id : this.state.match_id\n       },{\"headers\": {\n\n           \"content-type\": \"application/json\",\n\n         },})\n       .then(response => {\n           console.warn(response.data);\n           console.warn(response.data.length);\n           window.alert(response.data);\n           //transfer code to be written here\n         })\n         .catch(function (error){\n           if (error.response) {\n             console.log(error.response.status);\n             console.log(error.response.header);\n             window.alert(\"some error occurred = \"+error.response.status);\n           }\n         });\n   }\n\n   deleteMatch = async () =>{\n    await axios.delete('http://localhost:8080/winsoft/BCCI/match/'+this.state.match_id,{\n       \n   },{\"headers\": {\n\n       \"content-type\": \"application/json\",\n\n     },})\n   .then(response => {\n       console.warn(response.data);\n       console.warn(response.data.length);\n       window.alert(response.data);\n       //transfer code to be written here\n     })\n     .catch(function (error){\n       if (error.response) {\n         console.log(error.response.status);\n         console.log(error.response.header);\n         window.alert(\"some error occurred = \"+error.response.status);\n       }\n     });\n}\n\n    handleChange = async(event) =>{\n        await this.setState({series_id: event.target.value});\n        console.log(this.state.series_id);\n        this.fetchData(this.state.series_id);\n    }\n\n    handleInputChange(event){\n        const value = event.target.value;\n        const name = event.target.name;\n        console.warn(name + \" \"+value);\n        this.setState({\n            [name] : value\n        });\n\n        console.warn(name + \" \"+value);\n    }\n\n    handleCheckChange(e) {\n        const item = e.target.name;\n        console.log(\"match ID = \"+item);\n        this.getData(item);\n        //window.alert(\"match ID = \"+item);\n      }\n\n    render(){\n        return(\n            <div className = \"container\">\n                <center><h1>Update Match By Series Id</h1></center>\n                <br/>\n                <label  className = \"selectser\">Select Series</label>\n                    <select value = {this.state.value} onChange = {this.handleChange}\n                    className=\"selectOption\">\n                    {\n                        this.state.series.map(singleseries =>\n                            <Option\n                                key = {singleseries.series_id}\n                                value = {singleseries.series_id}\n                                name = {singleseries.series_name}\n                            />\n                        )\n                    }\n                </select>\n                <br/><br/>\n                <label  className = \"selectser\">Select Match</label>\n                <table>\n                    <MatchTableHead\n                        firstcolumn = \"MatchId\"\n                        secondcolumn = \"Team 1\"\n                        thirdcolumn = \"Team 2\"\n                        fourthcolumn = \"City Name\"\n                        fifthcolumn = \"Match Date\"\n  \n                    />\n                    <tbody>\n                        {\n                            this.state.match.map(singlematch =>\n\n                            <EditMatchTableRow key={singlematch.match_id}\n                            handleCheckChange = {this.handleCheckChange}\n                            handleInputChange = {this.handleInputChange}\n                            firstcolumn = {singlematch.match_id} \n                            secondcolumnValue = {singlematch.team1}\n                            thirdcolumnValue = {singlematch.team2}\n                            fourthcolumnValue = {singlematch.city}\n                            fifthcolumnValue = {singlematch.date} \n                            />)\n                        }\n                </tbody>\n                </table>\n                    <br/><br/>\n                    <label  className = \"selectser\">Update The Suitable Information Match</label>\n                    <table>\n                    <MatchHead\n                        firstcolumn = \"MatchId\"\n                        secondcolumn = \"Team 1\"\n                        thirdcolumn = \"Team 2\"\n                        fourthcolumn = \"City Name\"\n                        fifthcolumn = \"Match Date\"\n  \n                    />\n                    <tbody>\n                        {\n                            this.state.newMatch.map(singlematch =>\n                            <EditMatchRow key={singlematch.match_id}\n                            handleInputChange = {this.handleInputChange}\n                            firstcolumn = {this.state.match_id} \n                            secondcolumnValue = {this.state.team1}\n                            thirdcolumnValue = {this.state.team2}\n                            fourthcolumnValue = {this.state.city}\n                            fifthcolumnValue = {this.state.date} \n                            />)\n                        }\n                    </tbody>\n                    </table>\n\n                    <br/><br/>\n                    <button  className = \"btn\" onClick = {this.saveUpdatedMatch}>Update Match</button>\n                    <button  className = \"delbtn\" onClick = {this.deleteMatch}>Delete Match</button>\n            </div>\n            \n        )\n    };\n}\n\nexport default UpdateMatch;","import { createBrowserHistory as history} from 'history';\n\nexport default history();","import React from \"react\";\nimport history from \"./history\";\n\nclass MasterPanel extends React.Component{\n    render(){\n        return(\n            <div className=\"container\">\n                <h1>Welcome To Master Pannel</h1>\n                <button className=\"masterpannelbtn\" onClick={()=> history.push('SeriesMasterPanel')}> Series</button>\n                <button className=\"masterpannelbtn\" onClick={()=> history.push('MatchMasterPanel')} > Match</button>\n            </div>\n        )\n    };\n}\n\nexport default MasterPanel;","import React from \"react\";\nimport history from \"./history\";\n\nclass MatchMasterPanel extends React.Component{\n    render(){\n        return(\n            <div className=\"container\">\n                <h1>Welcome To Master Match Pannel</h1>\n                <button className=\"matchmasterpannelbtn\" onClick={()=> history.push('GetMatchesBySeriesId')}>\n                Match Details</button>\n                <button className=\"matchmasterpannelbtn\" onClick={()=> history.push('UpdateMatch')} >\n                Update Match</button>\n                <button className=\"matchmasterpannelbtn\" onClick={()=> history.push('UpdateMatch')}>\n                Delete Match</button>\n                <button className=\"matchmasterpannelbtn\" onClick={()=> history.push('Prediction')}>\n                 Predict Matches</button>\n            </div>\n        )\n    };\n}\n\nexport default MatchMasterPanel;","import React from \"react\";\nimport history from \"./history\";\n\nclass SeriesMasterPanel extends React.Component{\n    render(){\n        return(\n            <div className=\"container\">\n                <h1>Welcome To Series Match Pannel</h1>\n                <button className=\"matchmasterpannelbtn\" onClick={()=> history.push('GetAllSeries')}>\n                 Series Details</button>\n                <button className=\"matchmasterpannelbtn\" onClick={()=> history.push('UpdateSeries')} >\n                Update Series</button>\n                <button className=\"matchmasterpannelbtn\" onClick={()=> history.push('UpdateSeries')}>\n                Delete Series</button>\n                <button className=\"matchmasterpannelbtn\" onClick={()=> history.push('GetMatchesBySeriesId')}>\n                Match Details</button>\n            </div>\n        )\n    };\n}\n\nexport default SeriesMasterPanel;","import React from \"react\";\n\nfunction PredictionTableHead(props){\n    return (\n        <thead>\n        <tr>\n          <th>{props.firstcolumn}</th>\n          <th>{props.secondcolumn}</th>\n          <th>{props.thirdcolumn}</th>\n          <th>{props.fourthcolumn}</th>\n          <th>{props.fifthcolumn}</th>\n          <th>{props.sixthcolumn}</th>\n          <th>{props.seventhcolumn}</th>\n          <th>{props.eigthcolumn}</th>\n        </tr>\n        </thead>\n    );\n}\n\nexport default PredictionTableHead;","import React from \"react\";\n\nfunction PredictionTableRow(props){\n    return(\n        <tr>\n            <td>{props.firstcolumn}</td>\n            <td>{props.secondcolumn}</td>\n            <td>{props.thirdcolumn}</td>\n            <td>{props.fourthcolumn}</td>\n            <td>{props.fifthcolumn}</td>\n            <td>{props.sixthcolumn}</td>\n            <td>{props.seventhcolumn}</td>\n            <td>{props.eigthcolumn}</td>\n        </tr>\n    );\n}\n\nexport default PredictionTableRow;","import React from \"react\";\nimport axios from 'axios';\nimport Option from \"./Option\";\nimport PredictionTableHead from \"./PredictionTableHead\";\nimport PredictionTableRow from \"./PredictionTableRow\";\n\nclass Prediction extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            series : [],\n            prediction : [],\n            resposelength : '0',\n            weatherCat : '',\n            weatherPerc : '',\n            perc : '',\n            iconId : ''\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.getValue = this.getValue.bind(this);\n    }\n\n    componentDidMount(){  \n        fetch('http://localhost:8080/winsoft/BCCI/series').then((resp)=>{\n          resp.json().then((result)=>{\n            console.warn(result);\n            this.setState({series:result});\n          })\n        })\n    }\n\n    fetchData = async (seriesId) => {\n        await axios.get(`http://localhost:8080/winsoft/BCCI/weather/${seriesId}`)\n                .then(response => {\n                  console.warn(response.data);\n                  console.warn(response.data.length);\n                  this.setState({prediction:response.data, resposelength:response.data.length});\n                  console.log(Object.keys(response.data[0].predictionData));\n                  var value;\n                  var finalvalue;\n                  Object.keys(response.data[0].predictionData).forEach(function(key){\n                    value = response.data[0].predictionData[key];\n                    Object.keys(value).forEach(function(ke){\n                       finalvalue = value[ke]; \n                       console.log(\"weather cat\"+ke);\n                    });\n                    console.log(\"inside console : \"+value)\n                    console.log(\"console : \"+finalvalue)\n                    \n                    });\n                  \n                })\n                .catch(function (error){\n                  if (error.response) {\n                    console.log(error.response.status);\n                    console.log(error.response.header);\n                    window.alert(\"No matches found in this series = \"+error.response.status);\n                  }\n                });\n\n    }\n\n    handleChange = async (event) =>{\n        await this.setState({value: event.target.value});\n        console.log(\"selected Series  = \"+this.state.value);\n        this.fetchData(this.state.value);\n    }\n\n    getWeatherCat = (singlePredication) =>{\n        var value;\n        var weatherCat;\n        Object.keys(singlePredication.predictionData).forEach(function(key){\n        value = singlePredication.predictionData[key];\n        Object.keys(value).forEach(function(ke){\n            weatherCat = ke;\n         });\n        });\n        return weatherCat;\n    }\n\n    getValue = (singlePredication) =>{\n\n        var value;\n        var per;\n        Object.keys(singlePredication.predictionData).forEach(function(key){\n        value = singlePredication.predictionData[key];\n        Object.keys(value).forEach(function(ke){\n            per = value[ke];\n         });\n        });\n        return per;\n    }\n    fetchImageUrl = (singlePredication) => {\n        console.log(\"in image : \"+Object.keys(singlePredication.predictionData));\n        return \"http://openweathermap.org/img/w/\"+Object.keys(singlePredication.predictionData)+\".png\"\n    }\n    render(){\n        return(\n            <div>\n            <div className=\"container\">\n                <select value = {this.state.value} onChange = {this.handleChange}>\n                    {\n                        this.state.series.map(singleseries =>\n                            <Option\n                                key = {singleseries.series_id}\n                                value = {singleseries.series_id}\n                                name = {singleseries.series_name}\n                            />\n                        )\n                    }\n                </select>\n                </div>\n                <div>\n                <table>\n          \n                <PredictionTableHead\n                    firstcolumn = \"Series Name\"\n                    secondcolumn = \"Team 1\"\n                    thirdcolumn = \"Team 2\"\n                    fourthcolumn = \"City Name\"\n                    fifthcolumn = \"Match Date\"\n                    sixthcolumn = \"Weather Condition\"\n                    seventhcolumn = \"prediction Percentage\"\n                    eigthcolumn = \"weather photo\"\n                />\n                <tbody>\n                {\n                    this.state.prediction.map(singlePredication =>\n                        <PredictionTableRow\n                            key={singlePredication.match_id}\n                            firstcolumn = {singlePredication.series_name}\n                            secondcolumn = {singlePredication.team1}\n                            thirdcolumn = {singlePredication.team2}\n                            fourthcolumn = {singlePredication.city}\n                            fifthcolumn = {singlePredication.match_date}\n                            sixthcolumn = {\n                                this.getWeatherCat(singlePredication)\n                            }\n                            seventhcolumn = {this.getValue(singlePredication)}\n                            eigthcolumn = {<img  src={this.fetchImageUrl(singlePredication)} alt=\"weather\" />}\n                        /> \n                        \n                    )\n                }\n                </tbody>\n                </table>\n            </div>\n            </div>\n            \n        )\n    };\n\n}\nexport default Prediction;","import React, { Component } from \"react\";\nimport { Router, Switch, Route } from \"react-router-dom\";\n\nimport App from \"../components/Apps\";\nimport AllMatch from \"../components/AllMatch\"\nimport GetMatchesBySeriesId from \"../components/getMatchesBySeries\"\nimport CreateSeries from \"../components/CreateSeries\";\nimport CreateMatchBySeries from \"../components/CreateMatchBySeries\";\nimport UpdateSeries from \"../components/UpdateSeries\";\nimport UpdateMatch from \"../components/UpdateMatch\";\nimport MasterPannel from \"../components/MasterPannel\";\nimport MatchMasterPanel from \"../components/MatchMasterPanel\";\nimport SeriesMasterPanel from \"../components/SeriesMasterPanel\";\nimport Prediction from \"../components/Prediction\";\nimport history from \"../components/history\";\n\nexport default class Routes extends Component {\n    render() {\n        return (\n            <Router history={history}>\n                <Switch>\n                    <Route path=\"/\" exact component={MasterPannel} />\n                    <Route path=\"/MatchMasterPanel\" exact component={MatchMasterPanel} />\n                    <Route path=\"/SeriesMasterPanel\" exact component={SeriesMasterPanel} />\n                    <Route path=\"/GetAllSeries\" exact component={App} />\n                    <Route path=\"/AllMatch\" exact component={AllMatch} />\n                    <Route path=\"/GetMatchesBySeriesId\" exact component={GetMatchesBySeriesId} />\n                    <Route path=\"/CreateSeries\" exact component={CreateSeries} />\n                    <Route path=\"/CreateMatchBySeries\" exact component={CreateMatchBySeries} />\n                    <Route path=\"/UpdateSeries\" exact component={UpdateSeries} />\n                    <Route path=\"/UpdateMatch\" exact component={UpdateMatch} />\n                    <Route path=\"/Prediction\" exact component={Prediction} />\n                </Switch>\n            </Router>\n        )\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Routes from \"./Routes/Routes\"\n\nReactDOM.render(\n  <Router>\n    <Routes />\n</Router>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}